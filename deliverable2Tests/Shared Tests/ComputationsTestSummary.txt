Notes:
--> Imports several shared computation classes from the Sigmah library.
    --> There is a Computations.java file in the Sigmah drive.

--> Test several parsable mathematical inputs.
	  --> From String to Integer.
		--> There are actual test cases for inputting numbers in French, and converting them into integers.

--> To ensure that in-depth mathematical expressions are parsed correctly and follow the proper order of operations.
    --> Tested to throw errors if they have not.

--> Ensures that the project is compatible with several different languages and their math counterparts that follow.

--> Examples:
	      --> testParseAddSub
		    --> testParseMultDiv
		    --> testParseUnary (difference between / and ÷)
	      --> testParseContext
	      --> testParseVariable (algebra)
		    --> testParseFunction
		    --> testDivisionError
		    --> testReferenceError
		    --> testBadValue
		    --> testBadFormula
		    --> testHumanReadableFormat
		    --> testComputWithValueResolver
			      --> w/an Overrided reference to resolve()
		    --> private List<FlexibleElementDTO> getAllElements()
			      --> private list that defines that “neuf” = 9
				    --> importing the French words -> integers
		    --> testFormatRuleForEdition
		    --> testFormatRuleForServer
		    --> testFormulaWithFrenchCharacters
		    --> testFormulaWithJapaneseCharacters
